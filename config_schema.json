{
  "$defs": {
    "TOTPAlgorithm": {
      "description": "The state of a user session.",
      "enum": [
        "sha1",
        "sha256",
        "sha512"
      ],
      "title": "TOTPAlgorithm",
      "type": "string"
    }
  },
  "additionalProperties": false,
  "description": "Modifies the orginal Settings class provided by the user",
  "properties": {
    "service_name": {
      "default": "auth_service",
      "description": "Short name of this service",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. This is included in log messages.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "kafka_servers": {
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "examples": [
        [
          "localhost:9092"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Kafka Servers",
      "type": "array"
    },
    "kafka_security_protocol": {
      "default": "PLAINTEXT",
      "description": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL.",
      "enum": [
        "PLAINTEXT",
        "SSL"
      ],
      "title": "Kafka Security Protocol",
      "type": "string"
    },
    "kafka_ssl_cafile": {
      "default": "",
      "description": "Certificate Authority file path containing certificates used to sign broker certificates. If a CA is not specified, the default system CA will be used if found by OpenSSL.",
      "title": "Kafka Ssl Cafile",
      "type": "string"
    },
    "kafka_ssl_certfile": {
      "default": "",
      "description": "Optional filename of client certificate, as well as any CA certificates needed to establish the certificate's authenticity.",
      "title": "Kafka Ssl Certfile",
      "type": "string"
    },
    "kafka_ssl_keyfile": {
      "default": "",
      "description": "Optional filename containing the client private key.",
      "title": "Kafka Ssl Keyfile",
      "type": "string"
    },
    "kafka_ssl_password": {
      "default": "",
      "description": "Optional password to be used for the client private key.",
      "title": "Kafka Ssl Password",
      "type": "string"
    },
    "generate_correlation_id": {
      "default": true,
      "description": "A flag, which, if False, will result in an error when inbound requests don't possess a correlation ID. If True, requests without a correlation ID will be assigned a newly generated ID in the correlation ID middleware function.",
      "examples": [
        true,
        false
      ],
      "title": "Generate Correlation Id",
      "type": "boolean"
    },
    "dataset_deletion_event_topic": {
      "default": "metadata_datasets",
      "description": "the topic of the event announcing dataset deletions",
      "title": "Dataset Deletion Event Topic",
      "type": "string"
    },
    "dataset_deletion_event_type": {
      "default": "dataset_deleted",
      "description": "the type of the event announcing dataset deletions",
      "title": "Dataset Deletion Event Type",
      "type": "string"
    },
    "log_level": {
      "default": "INFO",
      "description": "The minimum log level to capture.",
      "enum": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG",
        "TRACE"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "log_format": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "If set, will replace JSON formatting with the specified string format. If not set, has no effect. In addition to the standard attributes, the following can also be specified: timestamp, service, instance, level, correlation_id, and details",
      "examples": [
        "%(timestamp)s - %(service)s - %(level)s - %(message)s",
        "%(asctime)s - Severity: %(levelno)s - %(msg)s"
      ],
      "title": "Log Format"
    },
    "totp_issuer": {
      "default": "GHGA",
      "description": "Issuer name for TOTP provisioning URIs",
      "title": "Totp Issuer",
      "type": "string"
    },
    "totp_image": {
      "anyOf": [
        {
          "format": "uri",
          "minLength": 1,
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "URL of the PNG image provided in the TOTP provisioning URIs",
      "examples": [
        "https://www.ghga.de/logo.png"
      ],
      "title": "Totp Image"
    },
    "totp_algorithm": {
      "allOf": [
        {
          "$ref": "#/$defs/TOTPAlgorithm"
        }
      ],
      "default": "sha1",
      "description": "Hash algorithm used for TOTP code generation"
    },
    "totp_digits": {
      "default": 6,
      "description": "Number of digits used for the TOTP code",
      "title": "Totp Digits",
      "type": "integer"
    },
    "totp_interval": {
      "default": 30,
      "description": "Time interval in seconds for generating TOTP codes",
      "title": "Totp Interval",
      "type": "integer"
    },
    "totp_tolerance": {
      "default": 1,
      "description": "Number of intervals to check before and after the current time",
      "title": "Totp Tolerance",
      "type": "integer"
    },
    "totp_attempts": {
      "default": 3,
      "description": "Maximum number of attempts to verify a TOTP code",
      "title": "Totp Attempts",
      "type": "integer"
    },
    "totp_secret_size": {
      "default": 32,
      "description": "Size of the Base32 encoded TOTP secrets",
      "title": "Totp Secret Size",
      "type": "integer"
    },
    "totp_encryption_key": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Base64 encoded key used to encrypt TOTP secrets",
      "title": "Totp Encryption Key"
    },
    "session_id_bytes": {
      "default": 24,
      "description": "Number of bytes to be used for a session ID.",
      "title": "Session ID size",
      "type": "integer"
    },
    "csrf_token_bytes": {
      "default": 24,
      "description": "Number of bytes to be used for a CSRF token.",
      "title": "CSRF token size",
      "type": "integer"
    },
    "session_timeout_seconds": {
      "default": 3600,
      "description": "Session timeout in seconds",
      "title": "Session timeout",
      "type": "integer"
    },
    "session_max_lifetime_seconds": {
      "default": 43200,
      "description": "Maximum lifetime of a session in seconds",
      "title": "Max. session duration",
      "type": "integer"
    },
    "auth_key": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "internal public key for user management (key pair for auth adapter)",
      "title": "Auth Key"
    },
    "auth_algs": {
      "default": [
        "ES256"
      ],
      "description": "A list of all algorithms used for signing GHGA internal tokens.",
      "items": {
        "type": "string"
      },
      "title": "Auth Algs",
      "type": "array"
    },
    "auth_check_claims": {
      "default": {
        "name": null,
        "email": null,
        "iat": null,
        "exp": null
      },
      "description": "A dict of all GHGA internal claims that shall be verified.",
      "title": "Auth Check Claims",
      "type": "object"
    },
    "auth_map_claims": {
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "description": "A mapping of claims to attributes in the GHGA auth context.",
      "title": "Auth Map Claims",
      "type": "object"
    },
    "host": {
      "default": "127.0.0.1",
      "description": "IP of the host.",
      "title": "Host",
      "type": "string"
    },
    "port": {
      "default": 8080,
      "description": "Port to expose the server on the specified host",
      "title": "Port",
      "type": "integer"
    },
    "auto_reload": {
      "default": false,
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "title": "Auto Reload",
      "type": "boolean"
    },
    "workers": {
      "default": 1,
      "description": "Number of workers processes to run.",
      "title": "Workers",
      "type": "integer"
    },
    "api_root_path": {
      "default": "",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "title": "Api Root Path",
      "type": "string"
    },
    "openapi_url": {
      "default": "/openapi.json",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "title": "Openapi Url",
      "type": "string"
    },
    "docs_url": {
      "default": "/docs",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "title": "Docs Url",
      "type": "string"
    },
    "cors_allowed_origins": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allowed Origins"
    },
    "cors_allow_credentials": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allow Credentials"
    },
    "cors_allowed_methods": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "examples": [
        [
          "*"
        ]
      ],
      "title": "Cors Allowed Methods"
    },
    "cors_allowed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "examples": [
        []
      ],
      "title": "Cors Allowed Headers"
    },
    "run_auth_adapter": {
      "default": false,
      "description": "Run as auth adapter",
      "title": "Run Auth Adapter",
      "type": "boolean"
    },
    "api_ext_path": {
      "default": "/api/auth",
      "description": "external API path for the user management as seen by the auth adapter",
      "title": "Api Ext Path",
      "type": "string"
    },
    "auth_ext_keys": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "external public key set for auth adapter (not used for user management)",
      "title": "Auth Ext Keys"
    },
    "auth_ext_algs": {
      "default": [
        "RS256",
        "ES256"
      ],
      "description": "allowed algorithms for signing external tokens",
      "items": {
        "type": "string"
      },
      "title": "Auth Ext Algs",
      "type": "array"
    },
    "basic_auth_credentials": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "credentials for basic authentication, separated by whitespace",
      "title": "Basic Auth Credentials"
    },
    "basic_auth_realm": {
      "default": "GHGA Data Portal",
      "description": "realm for basic authentication",
      "title": "Basic Auth Realm",
      "type": "string"
    },
    "allow_read_paths": {
      "default": [
        "/.well-known/*",
        "/service-logo.png"
      ],
      "description": "paths that are public or use their own authentication mechanism",
      "items": {
        "type": "string"
      },
      "title": "Allow Read Paths",
      "type": "array"
    },
    "allow_write_paths": {
      "default": [],
      "description": "paths for writing that use their own authentication mechanism",
      "items": {
        "type": "string"
      },
      "title": "Allow Write Paths",
      "type": "array"
    },
    "include_apis": {
      "default": [
        "users"
      ],
      "description": "If not run as auth adapter, which APIs should be provided. If no APIs are specified, run the event consumer.",
      "items": {
        "enum": [
          "users",
          "claims"
        ],
        "type": "string"
      },
      "title": "Include Apis",
      "type": "array"
    },
    "add_as_data_stewards": {
      "default": [],
      "description": "a list of external IDs of data stewards or user objects to seed the claims repository with",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object"
          }
        ]
      },
      "title": "Add As Data Stewards",
      "type": "array"
    },
    "oidc_authority_url": {
      "default": "https://proxy.aai.lifescience-ri.eu",
      "description": "external OIDC authority URL used by the auth adapter",
      "format": "uri",
      "maxLength": 2083,
      "minLength": 1,
      "title": "Oidc Authority Url",
      "type": "string"
    },
    "oidc_userinfo_endpoint": {
      "anyOf": [
        {
          "format": "uri",
          "maxLength": 2083,
          "minLength": 1,
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": "https://proxy.aai.lifescience-ri.eu/OIDC/userinfo",
      "description": "external OIDC userinfo endpoint used by the auth adapter",
      "title": "Oidc Userinfo Endpoint"
    },
    "oidc_client_id": {
      "default": "ghga-data-portal",
      "description": "the registered OIDC client ID",
      "title": "Oidc Client Id",
      "type": "string"
    },
    "organization_url": {
      "default": "https://ghga.de",
      "description": "the URL used as source for internal claims",
      "format": "uri",
      "maxLength": 2083,
      "minLength": 1,
      "title": "Organization Url",
      "type": "string"
    },
    "db_url": {
      "default": "mongodb://mongodb:27017",
      "description": "MongoDB connection string",
      "format": "password",
      "title": "Db Url",
      "type": "string",
      "writeOnly": true
    },
    "db_name": {
      "default": "user-management",
      "description": "Name of the MongoDB database",
      "title": "Db Name",
      "type": "string"
    },
    "users_collection": {
      "default": "users",
      "description": "Name of the MongoDB collection for users",
      "title": "Users Collection",
      "type": "string"
    },
    "claims_collection": {
      "default": "claims",
      "description": "Name of the MongoDB collection for claims",
      "title": "Claims Collection",
      "type": "string"
    }
  },
  "required": [
    "service_instance_id",
    "kafka_servers"
  ],
  "title": "ModSettings",
  "type": "object"
}