{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "auth_key": {
      "title": "Auth Key",
      "env_names": [
        "auth_service_auth_key"
      ],
      "type": "string"
    },
    "auth_algs": {
      "title": "Auth Algs",
      "default": [
        "ES256"
      ],
      "env_names": [
        "auth_service_auth_algs"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "auth_check_claims": {
      "title": "Auth Check Claims",
      "default": {
        "name": null,
        "email": null,
        "iat": null,
        "exp": null
      },
      "env_names": [
        "auth_service_auth_check_claims"
      ],
      "type": "object"
    },
    "auth_map_claims": {
      "title": "Auth Map Claims",
      "default": {},
      "env_names": [
        "auth_service_auth_map_claims"
      ],
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "host": {
      "title": "Host",
      "description": "IP of the host.",
      "default": "127.0.0.1",
      "env_names": [
        "auth_service_host"
      ],
      "type": "string"
    },
    "port": {
      "title": "Port",
      "description": "Port to expose the server on the specified host",
      "default": 8080,
      "env_names": [
        "auth_service_port"
      ],
      "type": "integer"
    },
    "log_level": {
      "title": "Log Level",
      "default": "debug",
      "env_names": [
        "auth_service_log_level"
      ],
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "type": "string"
    },
    "auto_reload": {
      "title": "Auto Reload",
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "default": false,
      "env_names": [
        "auth_service_auto_reload"
      ],
      "type": "boolean"
    },
    "workers": {
      "title": "Workers",
      "description": "Number of workers processes to run.",
      "default": 1,
      "env_names": [
        "auth_service_workers"
      ],
      "type": "integer"
    },
    "api_root_path": {
      "title": "Api Root Path",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "default": "/",
      "env_names": [
        "auth_service_api_root_path"
      ],
      "type": "string"
    },
    "openapi_url": {
      "title": "Openapi Url",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "default": "/openapi.json",
      "env_names": [
        "auth_service_openapi_url"
      ],
      "type": "string"
    },
    "docs_url": {
      "title": "Docs Url",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "default": "/docs",
      "env_names": [
        "auth_service_docs_url"
      ],
      "type": "string"
    },
    "cors_allowed_origins": {
      "title": "Cors Allowed Origins",
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "auth_service_cors_allowed_origins"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allow_credentials": {
      "title": "Cors Allow Credentials",
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "auth_service_cors_allow_credentials"
      ],
      "type": "boolean"
    },
    "cors_allowed_methods": {
      "title": "Cors Allowed Methods",
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "example": [
        "*"
      ],
      "env_names": [
        "auth_service_cors_allowed_methods"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allowed_headers": {
      "title": "Cors Allowed Headers",
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "example": [],
      "env_names": [
        "auth_service_cors_allowed_headers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "service_name": {
      "title": "Service Name",
      "default": "auth_service",
      "env_names": [
        "auth_service_service_name"
      ],
      "type": "string"
    },
    "run_auth_adapter": {
      "title": "Run Auth Adapter",
      "default": false,
      "env_names": [
        "auth_service_run_auth_adapter"
      ],
      "type": "boolean"
    },
    "api_ext_path": {
      "title": "Api Ext Path",
      "default": "/api/auth",
      "env_names": [
        "auth_service_api_ext_path"
      ],
      "type": "string"
    },
    "auth_ext_keys": {
      "title": "Auth Ext Keys",
      "env_names": [
        "auth_service_auth_ext_keys"
      ],
      "type": "string"
    },
    "auth_ext_algs": {
      "title": "Auth Ext Algs",
      "default": [
        "RS256",
        "ES256"
      ],
      "env_names": [
        "auth_service_auth_ext_algs"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "basic_auth_credentials": {
      "title": "Basic Auth Credentials",
      "env_names": [
        "auth_service_basic_auth_credentials"
      ],
      "type": "string"
    },
    "basic_auth_realm": {
      "title": "Basic Auth Realm",
      "default": "GHGA Data Portal",
      "env_names": [
        "auth_service_basic_auth_realm"
      ],
      "type": "string"
    },
    "allow_read_paths": {
      "title": "Allow Read Paths",
      "default": [
        "/.well-known/*",
        "/service-logo.png"
      ],
      "env_names": [
        "auth_service_allow_read_paths"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "allow_write_paths": {
      "title": "Allow Write Paths",
      "default": [],
      "env_names": [
        "auth_service_allow_write_paths"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "include_apis": {
      "title": "Include Apis",
      "default": [
        "users"
      ],
      "env_names": [
        "auth_service_include_apis"
      ],
      "type": "array",
      "items": {
        "enum": [
          "users",
          "claims"
        ],
        "type": "string"
      }
    },
    "add_as_data_stewards": {
      "title": "Add As Data Stewards",
      "default": [],
      "env_names": [
        "auth_service_add_as_data_stewards"
      ],
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object"
          }
        ]
      }
    },
    "oidc_authority_url": {
      "title": "Oidc Authority Url",
      "default": "https://proxy.aai.lifescience-ri.eu",
      "env_names": [
        "auth_service_oidc_authority_url"
      ],
      "minLength": 1,
      "maxLength": 2083,
      "format": "uri",
      "type": "string"
    },
    "oidc_userinfo_endpoint": {
      "title": "Oidc Userinfo Endpoint",
      "default": "https://proxy.aai.lifescience-ri.eu/OIDC/userinfo",
      "env_names": [
        "auth_service_oidc_userinfo_endpoint"
      ],
      "minLength": 1,
      "maxLength": 2083,
      "format": "uri",
      "type": "string"
    },
    "oidc_client_id": {
      "title": "Oidc Client Id",
      "default": "ghga-data-portal",
      "env_names": [
        "auth_service_oidc_client_id"
      ],
      "type": "string"
    },
    "organization_url": {
      "title": "Organization Url",
      "default": "https://ghga.de",
      "env_names": [
        "auth_service_organization_url"
      ],
      "minLength": 1,
      "maxLength": 2083,
      "format": "uri",
      "type": "string"
    },
    "db_url": {
      "title": "Db Url",
      "default": "mongodb://mongodb:27017",
      "env_names": [
        "auth_service_db_url"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "db_name": {
      "title": "Db Name",
      "default": "user-management",
      "env_names": [
        "auth_service_db_name"
      ],
      "type": "string"
    },
    "users_collection": {
      "title": "Users Collection",
      "default": "users",
      "env_names": [
        "auth_service_users_collection"
      ],
      "type": "string"
    },
    "claims_collection": {
      "title": "Claims Collection",
      "default": "claims",
      "env_names": [
        "auth_service_claims_collection"
      ],
      "type": "string"
    }
  },
  "additionalProperties": false
}