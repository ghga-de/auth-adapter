# This file was autogenerated, please do not modify.
components:
  schemas:
    AcademicTitle:
      allOf:
      - $ref: '#/components/schemas/AcademicTitleEnum'
      description: Academic title of the user (only Dr. or Prof.)
      title: AcademicTitle
    AcademicTitleEnum:
      description: Academic title
      enum:
      - Dr.
      - Prof.
      title: AcademicTitleEnum
      type: string
    FullName:
      description: Full name of the user
      example: Rosalind Franklin
      title: FullName
      type: string
    ID:
      description: Internally used ID
      title: ID
      type: string
    LSID:
      description: Life Science ID
      example: user@lifescience-ri.eu
      format: email
      title: LSID
      type: string
    User:
      description: User
      properties:
        email:
          format: email
          title: Email
          type: string
        id:
          $ref: '#/components/schemas/ID'
        ls_id:
          $ref: '#/components/schemas/LSID'
        name:
          $ref: '#/components/schemas/FullName'
        registration_date:
          format: date-time
          title: Resitration date
          type: string
        registration_reason:
          title: Reason for registration
          type: string
        research_topics:
          title: Research topic(s)
          type: string
        status:
          $ref: '#/components/schemas/UserStatus'
        title:
          $ref: '#/components/schemas/AcademicTitle'
      required:
      - ls_id
      - status
      - name
      - email
      - registration_date
      - id
      title: User
      type: object
    UserData:
      description: User data
      properties:
        email:
          format: email
          title: Email
          type: string
        ls_id:
          $ref: '#/components/schemas/LSID'
        name:
          $ref: '#/components/schemas/FullName'
        registration_date:
          format: date-time
          title: Resitration date
          type: string
        registration_reason:
          title: Reason for registration
          type: string
        research_topics:
          title: Research topic(s)
          type: string
        status:
          $ref: '#/components/schemas/UserStatus'
        title:
          $ref: '#/components/schemas/AcademicTitle'
      required:
      - ls_id
      - status
      - name
      - email
      - registration_date
      title: UserData
      type: object
    UserStatus:
      allOf:
      - $ref: '#/components/schemas/UserStatusEnum'
      description: Registration status of the user
      title: UserStatus
    UserStatusEnum:
      description: User status enum
      enum:
      - registered
      - activated
      - inactivated
      - deleted
      title: UserStatusEnum
      type: string
info:
  contact:
    email: helpdesk@ghga.de
    name: GHGA
  description: REST API for managing the GHGA user registry
  license:
    name: Apache 2.0
  title: User Registry API
  version: 0.1.0
openapi: 3.0.2
paths:
  /:
    get:
      description: Index of the User Management Service.
      operationId: index
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Index
  /users:
    post:
      description: Endpoint used to register a new user. May only be performed by
        the users themselves. Data delivered by the OIDC provider may not be altered.
      operationId: post_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserData'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User was successfully registered.
        '400':
          description: User cannot be registered.
        '409':
          description: User was already registered.
        '422':
          description: Validation error in submitted user data.
      summary: Register a user
      tags:
      - users
tags:
- description: User data
  name: users
